{"version":3,"sources":["webpack:///app.bundle.js","webpack:///./client/app/app.js","webpack:///./client/app/imageDragger/imageDragger.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_imageDragger","_imageDragger2","obj","__esModule","default","window","imageDragger","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","ImageDragger","query","_this","this","useWrapper","arguments","undefined","elementsList","elements","document","querySelectorAll","forEach","element","_addEventListeners","Array","call","lastDrag","touchedElement","event","dataTransfer","dropEffect","setData","src","_swapImages","preventDefault","elementFromPoint","changedTouches","clientX","clientY","filter","setAttribute","addEventListener","onStartDrag","bind","onDrop","onDragOver","onTouchMove","onTouchEnd","onTouchCancel","wrapper","createElement","parentNode","insertBefore","appendChild","push","sourceElement","targetElement","temp"],"mappings":"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","file":"app.bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _imageDragger = __webpack_require__(1);\n\nvar _imageDragger2 = _interopRequireDefault(_imageDragger);\n\n__webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Components\nwindow.imageDragger = new _imageDragger2.default('[xc-draggable]', true);\n\n// App Styles\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ImageDragger = function () {\n    function ImageDragger(query) {\n        var _this = this;\n\n        var useWrapper = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        _classCallCheck(this, ImageDragger);\n\n        if (typeof query === 'undefined' || query == '') {\n            throw 'Must provide a valid query selector for ImageDragger';\n        }\n\n        // We can't use array operations on NodeLists, so we make our own\n        this.elementsList = [];\n\n        var elements = document.querySelectorAll(query);\n\n        if (typeof elements.forEach !== 'undefined') {\n            elements.forEach(function (element) {\n                return _this._addEventListeners(element, useWrapper);\n            });\n        } else {\n            Array.prototype.forEach.call(elements, function (element) {\n                return _this._addEventListeners(element, useWrapper);\n            });\n        }\n\n        this.lastDrag = undefined;\n        this.touchedElement = undefined;\n    }\n\n    _createClass(ImageDragger, [{\n        key: 'onStartDrag',\n        value: function onStartDrag(event) {\n            event.dataTransfer.dropEffect = 'move';\n            event.dataTransfer.setData(\"text/plain\", event.target.src);\n\n            this.lastDrag = event.target;\n        }\n    }, {\n        key: 'onDrop',\n        value: function onDrop(event) {\n            if (typeof this.lastDrag !== 'undefined') {\n                this._swapImages(event.target, this.lastDrag);\n            }\n\n            event.preventDefault();\n        }\n    }, {\n        key: 'onDragOver',\n        value: function onDragOver(event) {\n            event.preventDefault();\n        }\n    }, {\n        key: 'onTouchMove',\n        value: function onTouchMove(event) {\n            var touchedElement = document.elementFromPoint(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n\n            if (this.elementsList.filter(function (element) {\n                return element === touchedElement;\n            }).length && event.target !== touchedElement) {\n                this.touchedElement = touchedElement;\n            } else {\n                this.touchedElement = undefined;\n            }\n        }\n    }, {\n        key: 'onTouchEnd',\n        value: function onTouchEnd(event) {\n            if (typeof this.touchedElement !== 'undefined') {\n                this._swapImages(event.target, this.touchedElement);\n            }\n        }\n    }, {\n        key: 'onTouchCancel',\n        value: function onTouchCancel(event) {\n            this.touchedElement = undefined;\n        }\n    }, {\n        key: '_addEventListeners',\n        value: function _addEventListeners(element, useWrapper) {\n            element.setAttribute('draggable', true);\n            element.addEventListener('dragstart', this.onStartDrag.bind(this));\n            element.addEventListener('drop', this.onDrop.bind(this));\n            element.addEventListener('dragover', this.onDragOver.bind(this));\n\n            element.addEventListener('touchmove', this.onTouchMove.bind(this));\n            element.addEventListener('touchend', this.onTouchEnd.bind(this));\n            element.addEventListener('touchcancel', this.onTouchCancel.bind(this));\n\n            if (useWrapper) {\n                var wrapper = document.createElement('div');\n\n                wrapper.setAttribute('image-dragger-wrapper', '');\n                element.parentNode.insertBefore(wrapper, element);\n                wrapper.appendChild(element);\n            }\n\n            this.elementsList.push(element);\n        }\n    }, {\n        key: '_swapImages',\n        value: function _swapImages(sourceElement, targetElement) {\n            var temp = sourceElement.src;\n\n            sourceElement.src = targetElement.src;\n            targetElement.src = temp;\n\n            targetElement = undefined;\n        }\n    }]);\n\n    return ImageDragger;\n}();\n\nexports.default = ImageDragger;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n],[4]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js","// Components\nimport ImageDragger from './imageDragger/imageDragger';\n\n// App Styles\nimport './app.styl';\n\nwindow.imageDragger = new ImageDragger('[xc-draggable]', true);\n\n\n// WEBPACK FOOTER //\n// ./client/app/app.js","import './imageDragger.styl';\r\n\r\nexport default class ImageDragger {\r\n    constructor(query, useWrapper = false) {\r\n        if(typeof query === 'undefined' || query == '') {\r\n            throw 'Must provide a valid query selector for ImageDragger';\r\n        }\r\n\r\n        // We can't use array operations on NodeLists, so we make our own\r\n        this.elementsList = [];\r\n\r\n        let elements = document.querySelectorAll(query);\r\n\r\n        if(typeof elements.forEach !== 'undefined') {\r\n            elements.forEach(element => this._addEventListeners(element, useWrapper));\r\n        } else {\r\n            Array.prototype.forEach.call(elements, element => this._addEventListeners(element, useWrapper));\r\n        }\r\n\r\n        this.lastDrag = undefined;\r\n        this.touchedElement = undefined;\r\n    }\r\n\r\n    onStartDrag(event) {\r\n        event.dataTransfer.dropEffect = 'move';\r\n        event.dataTransfer.setData(\"text/plain\", event.target.src);\r\n\r\n        this.lastDrag = event.target;\r\n    }\r\n\r\n    onDrop(event) {\r\n        if(typeof this.lastDrag !== 'undefined') {\r\n            this._swapImages(event.target, this.lastDrag);\r\n        }\r\n        \r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onTouchMove(event) {\r\n        let touchedElement = document.elementFromPoint(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\r\n\r\n        if(this.elementsList.filter(element => element === touchedElement).length && event.target !== touchedElement) {\r\n            this.touchedElement = touchedElement;\r\n        } else {\r\n            this.touchedElement = undefined;\r\n        }\r\n    }\r\n\r\n    onTouchEnd(event) {\r\n        if(typeof this.touchedElement !== 'undefined') {\r\n            this._swapImages(event.target, this.touchedElement)\r\n        }\r\n    }\r\n\r\n    onTouchCancel(event) {\r\n        this.touchedElement = undefined;\r\n    }\r\n\r\n    _addEventListeners(element, useWrapper) {\r\n        element.setAttribute('draggable', true);\r\n        element.addEventListener('dragstart', this.onStartDrag.bind(this));\r\n        element.addEventListener('drop', this.onDrop.bind(this));\r\n        element.addEventListener('dragover', this.onDragOver.bind(this));\r\n\r\n        element.addEventListener('touchmove', this.onTouchMove.bind(this));\r\n        element.addEventListener('touchend', this.onTouchEnd.bind(this));\r\n        element.addEventListener('touchcancel', this.onTouchCancel.bind(this));\r\n\r\n        if(useWrapper) {\r\n            let wrapper = document.createElement('div');\r\n            \r\n            wrapper.setAttribute('image-dragger-wrapper', '');\r\n            element.parentNode.insertBefore(wrapper, element);\r\n            wrapper.appendChild(element);\r\n        }\r\n\r\n        this.elementsList.push(element);\r\n    }\r\n\r\n    _swapImages(sourceElement, targetElement) {\r\n        let temp = sourceElement.src;\r\n\r\n        sourceElement.src = targetElement.src;\r\n        targetElement.src = temp;\r\n\r\n        targetElement = undefined;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/app/imageDragger/imageDragger.js"],"sourceRoot":""}